from classes.models import Course, Outline, SubOutline

# Step 1: Get the Django BootCamp course
try:
    django_bootcamp = Course.objects.get(title='Django Bootcamp')
except Course.DoesNotExist:
    print("The course 'Django Bootcamp' does not exist. Please create the course first.")
else:
    # Step 2: Create Outlines and SubOutlines for Django BootCamp
    outline_titles = [
        'Introduction to Django', 
        'Django Models and ORM', 
        'Views and Templates', 
        'Django Forms', 
        'Authentication and Authorization',
        'Deployment'
    ]

    sub_outline_titles = [
        ['Installing Django', 'Project Setup', 'Django Settings'],
        ['Creating Models', 'Migrations', 'Querying the Database'],
        ['Rendering Templates', 'Django Views', 'Template Inheritance'],
        ['Creating Forms', 'Handling Form Submissions', 'Form Validation'],
        ['User Authentication', 'User Authorization', 'Password Management'],
        ['Preparing for Deployment', 'Deploying on Heroku', 'Managing Static Files']
    ]

    for i, outline_title in enumerate(outline_titles):
        outline, created = Outline.objects.get_or_create(
            course=django_bootcamp,
            title=outline_title,
            description=f"This is the outline for {outline_title} in the Django Bootcamp course."
        )

        # Create SubOutlines
        for sub_outline_title in sub_outline_titles[i]:
            SubOutline.objects.get_or_create(
                course_outline=outline,
                sub_title=sub_outline_title
            )

    print("Successfully populated outlines and sub-outlines for Django Bootcamp.")
